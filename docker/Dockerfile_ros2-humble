#
# PX4 ROS2 Humble development environment
# Based from container under https://github.com/osrf/docker_images/tree/master/ros2/source/devel
#

FROM px4io/px4-dev-simulation-jammy:2024-05-18
LABEL maintainer="Saurav Agarwal <sauravag@upenn.edu>"

# setup environment
ENV ROS_DISTRO=humble
ENV TERM=xterm-256color

RUN apt-get	-y update; \
	apt-get -y upgrade; \
	apt-get -y install \
    apt-utils \
		build-essential \
		git \
		wget \
		gpg \
		curl \
		gdb \
        unzip \
		software-properties-common \
		ca-certificates \
		lsb-release \
		net-tools iputils-ping \
		locales

# Add repo for installing latest version of cmake
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null; \
		echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null; \
		apt-get update; \
		rm /usr/share/keyrings/kitware-archive-keyring.gpg \
    && apt-get install -y kitware-archive-keyring \
    && apt-get install -y cmake

RUN add-apt-repository -y ppa:jonathonf/vim \
    && apt-get update

RUN apt-get -y install \
        libgmp-dev \
		libmpfr-dev \
		libboost-all-dev \
		libeigen3-dev \
		python3.10 \
		python3.10-dev \
		python3.10-venv \
		python-is-python3 \
		libgeos-dev \
		libyaml-cpp-dev \
		vim \
        neovim \
		tmux \
		ffmpeg \
		gnuplot-nox \
		ninja-build \
        libpng-dev \
        libjpeg-dev \
        libopencv-dev \
        python3-opencv \
        bash-completion \
        dirmngr \
        gnupg2 \
        python3-argcomplete \
        python3-flake8 \
        python3-flake8-blind-except \
        python3-flake8-builtins \
        python3-flake8-class-newline \
        python3-flake8-comprehensions \
        python3-flake8-deprecated \
        python3-flake8-docstrings \
        python3-flake8-import-order \
        python3-flake8-quotes \
        python3-pip \
        python3-pytest-cov \
        python3-pytest-mock \
        python3-pytest-repeat \
        python3-pytest-rerunfailures \
        python3-pytest-runner \
        python3-pytest-timeout \
        python3-wheel \
        python3-empy \
        python3-lark

RUN add-apt-repository universe
RUN locale-gen en_US en_US.UTF-8; update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8; export LANG=en_US.UTF-8
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# install bootstrap tools
RUN apt-get -y update \
    && apt-get -y install \
        python3-colcon-common-extensions \
        python3-colcon-mixin \
        python3-rosdep \
        python3-setuptools \
        python3-vcstool \
    && apt-get -y autoremove \
    && apt-get -y clean autoclean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && rm -f /var/cache/apt/archives/*.deb \
    && rm -f /var/cache/apt/archives/parital/*.deb \
    && rm -f /var/cache/apt/*.bin

# install ros2 desktop
RUN apt-get -y update \
    && apt-get -y install \
        ros-$ROS_DISTRO-desktop \
        ros-$ROS_DISTRO-launch-testing-ament-cmake \
        ros-$ROS_DISTRO-ros2bag \
        ros-$ROS_DISTRO-rosidl-generator-dds-idl \
    && apt-get -y autoremove \
    && apt-get -y clean autoclean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && rm -f /var/cache/apt/archives/*.deb \
    && rm -f /var/cache/apt/archives/parital/*.deb \
    && rm -f /var/cache/apt/*.bin

RUN rosdep init

# setup colcon mixin and metadata
RUN colcon mixin add default \
		https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml \
	&& colcon mixin update \
	&& colcon metadata add default \
		https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml \
	&& colcon metadata update

RUN git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git \
    && mkdir -p Micro-XRCE-DDS-Agent/build \
    && cd Micro-XRCE-DDS-Agent/build \
    && cmake .. \
    && make \
    && make install \
    && ldconfig /usr/local/lib/

COPY install_dependencies.sh /opt/install_dependencies.sh
RUN chmod +x /opt/install_dependencies.sh
RUN ["/bin/bash", "-c", "/opt/install_dependencies.sh --geographiclib"]

RUN git clone https://github.com/pac-ws/geolocaltransform.git /opt/px4_ws/src/geolocaltransform
WORKDIR /opt/px4_ws/src/geolocaltransform
RUN pip3 install .

RUN git clone -b v1.14.0 https://github.com/PX4/PX4-Autopilot.git /opt/px4_ws/src/PX4-Autopilot
WORKDIR /opt/px4_ws/src/PX4-Autopilot
RUN ["/bin/bash", "-c", "make px4_sitl"]
WORKDIR /opt/px4_ws/src/PX4-Autopilot/Tools/simulation/gz/
RUN wget https://raw.githubusercontent.com/PX4/PX4-gazebo-models/9e47793f2bc18aa7cde39b1fc1c4b7bbc67e04ba/simulation-gazebo \
    && chmod +x simulation-gazebo

RUN git clone -b release/1.14 https://github.com/PX4/px4_msgs.git /opt/px4_ws/src/px4_msgs
WORKDIR /opt/px4_ws
RUN . /opt/ros/humble/setup.sh && colcon build --packages-select px4_msgs

WORKDIR /home/user
COPY dotfiles/* /home/user/
RUN wget https://github.com/AgarwalSaurav/px4-multi-sim/releases/download/rolling/vim.tar.xz
RUN tar -xvf /home/user/vim.tar.xz -C /home/user/

RUN wget https://github.com/AgarwalSaurav/px4-multi-sim/releases/download/rolling/simulation-gazebo.tar.gz
RUN tar -xvf /home/user/simulation-gazebo.tar.gz -C /home/user/
RUN rm /home/user/simulation-gazebo.tar.gz /home/user/vim.tar.xz
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/bin/bash"]